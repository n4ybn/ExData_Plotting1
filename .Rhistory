rc<- plot(sub=NULL,x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
plot(sub=NULL,x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",ann=FALSE)
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",xant=FALSE)
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",xant="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",xant="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",yant="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",yaxt="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",xaxt="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",xaxt="n")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
?par
par()
plot(x,y,type="l",xlab=housepw2$Day,ylab="Global Active Power (kilowatts)",ann=FALSE)
plot(xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
title(main=NULL,sub=NULL,xlab=housepw2Day,ylab="Global Active Power (kilowatts)")
title(main=NULL,sub=NULL,xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
title(main=NULL,sub=NULL,xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
plot(x,y,type="l",ann=FALSE)
title(main=NULL,sub=NULL,xlab=housepw2$Day,ylab="Global Active Power (kilowatts)")
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
## Cleanup
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
rc <- setwd("C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1")
library(data.table)
library("sqldf")
library("utils")
## install.packages("lubridate")
library(lubridate)
path <- getwd()
histfilename <- paste0(path,"History","_",format(Sys.time(), "%Y-%m-%d_%H-%M-%S"),".R")
savehistory(histfilename)
zip.file <- "exdata-data-household_power_consumption.zip"
csv.file <- "household_power_consumption.txt"
png.file <- "plot3.png"
data.dir <- getwd()
fileurl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
## Check for CSV file if not found then download ZIP and unzip
if (!file.exists(file.path(data.dir, csv.file))) {
download.file(fileurl,
destfile = file.path(data.dir, zip.file),
method = "wininet",
mode="wb")
dateDownloaded <- date()
unzip(file.path(data.dir, zip.file), exdir=".")
}
cols1 = c("Date","chr","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
## read file into table
housepw <- read.table(file=csv.file,header=TRUE,sep=";",stringsAsFactors = FALSE,na.strings="NA" )
# Find the Good rows
good <- complete.cases(housepw)
## Remove incomplete rows
housepw1 <- housepw[good,]
## Free up memory by deleting old unneeded objects
rm(housepw)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw1$Date,' ',housepw1$Time)
datetime <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
## Set up the Day and DayChr columns in the table.
housepw1$Day <- wday(datetime,label=TRUE)
housepw1$DayChr <- as.character(wday(datetime,label=TRUE))
## set time range of data we want to use
date.start <- "1/2/2007"
date.end <- "2/2/2007"
## Setup query for reducing data set
query <- paste0("Select * from housepw1 WHERE DayChr in ('Thurs','Fri') and Date in ('1/2/2007','2/2/2007')")
## Reduce number of rows to only those in our range.
housepw2 <- sqldf(query,stringsAsFactors=FALSE)
## Free up memory by deleting old unneeded objects
rm(housepw1)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw2[,1],' ',housepw2[,2])
datetime2 <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
housepw2$DateTime <- datetime2
View(housepw2)
with(housepw2, plot(Day,as.numeric(Sub_metering1),main=NULL,sub=NULL,type="l"))
with(housepw2, plot(Day,as.numeric(Sub_metering_1),main=NULL,sub=NULL,type="l"))
with(housepw2, plot(Day,as.numeric(Sub_metering_1),type="l"))
with(housepw2, plot(DateTime,xlab=Day,as.numeric(Sub_metering_1),type="l"))
with(housepw2, plot(DateTime,xlab=Day,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, plot(DateTime,xlab=Day,as.numeric(Sub_metering_1),type="l"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
TestChars <- function(sign = 1, font = 1, ...)
{
MB <- l10n_info()$MBCS
r <- if(font == 5) { sign <- 1; c(32:126, 160:254)
} else if(MB) 32:126 else 32:255
if (sign == -1) r <- c(32:126, 160:255)
par(pty = "s")
plot(c(-1,16), c(-1,16), type = "n", xlab = "", ylab = "",
xaxs = "i", yaxs = "i",
main = sprintf("sign = %d, font = %d", sign, font))
grid(17, 17, lty = 1) ; mtext(paste("MBCS:", MB))
for(i in r) try(points(i%%16, i%/%16, pch = sign*i, font = font,...))
}
TestChars()
try(TestChars(sign = -1))
TestChars(font = 5)  # Euro might be at 160 (0+10*16).
# Mac OS has apple at 240 (0+15*16).
try(TestChars(-1, font = 2))  # bold
legend("topright",pch=50,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=80,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=90,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=190,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
png(file=png.file)
with(housepw2, plot(DateTime,xlab=Day,as.numeric(Sub_metering_1),type="l"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title()
## Close out the file
dev.off()
## Cleanup
rm(housepw2)
sqldf()
plot(x,y,type="l",xlab=housepw2$Day,ann=FALSE)
title(ylab="Global Active Power (kilowatts)")
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot3.R', echo=TRUE)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title()
View(housepw2)
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"))
dev.off()
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"),ann=FALSE)
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"),ann=FALSE)
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l"),ann=FALSE)
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
with(housepw2,plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE))
with(housepw2, points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
with(housepw2, points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
sqldf()
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot2.R', echo=TRUE)
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot3.R', echo=TRUE)
## plot3.R - starting over from scratch 2015-10-10
## by David DuPre
## Plot data from:  UC Irvine Machine Learning Repository, a repository for machine learning datasets.
##  Title: "Individual household electric power consumption Data Set"
##  using data from the dates 2007-02-01 and 2007-02-02.
## File format:
## The following descriptions of the 9 variables in the dataset are taken from the UCI web site:
##
## 1. Date: Date in format dd/mm/yyyy
## 2. Time: time in format hh:mm:ss
## (Both of above replaced by TimeStamp column in my result set.)
## 1. TimeStamp  (All other columns below are reduced by 1.)
## 3. Global_active_power: household global minute-averaged active power (in kilowatt)
## 4. Global_reactive_power: household global minute-averaged reactive power (in kilowatt)
## 5. Voltage: minute-averaged voltage (in volt)
## 6. Global_intensity: household global minute-averaged current intensity (in ampere)
## 7. Sub_metering_1: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered).
## 8. Sub_metering_2: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light.
## 9. Sub_metering_3: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.
rc <- setwd("C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1")
library(data.table)
library("sqldf")
library("utils")
## install.packages("lubridate")
library(lubridate)
path <- getwd()
histfilename <- paste0(path,"History","_",format(Sys.time(), "%Y-%m-%d_%H-%M-%S"),".R")
savehistory(histfilename)
zip.file <- "exdata-data-household_power_consumption.zip"
csv.file <- "household_power_consumption.txt"
png.file <- "plot4.png"
data.dir <- getwd()
fileurl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
## Check for CSV file if not found then download ZIP and unzip
if (!file.exists(file.path(data.dir, csv.file))) {
download.file(fileurl,
destfile = file.path(data.dir, zip.file),
method = "wininet",
mode="wb")
dateDownloaded <- date()
unzip(file.path(data.dir, zip.file), exdir=".")
}
cols1 = c("Date","chr","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
## read file into table
housepw <- read.table(file=csv.file,header=TRUE,sep=";",stringsAsFactors = FALSE,na.strings="NA" )
# Find the Good rows
good <- complete.cases(housepw)
## Remove incomplete rows
housepw1 <- housepw[good,]
## Free up memory by deleting old unneeded objects
rm(housepw)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw1$Date,' ',housepw1$Time)
datetime <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
## Set up the Day and DayChr columns in the table.
housepw1$Day <- wday(datetime,label=TRUE)
housepw1$DayChr <- as.character(wday(datetime,label=TRUE))
## set time range of data we want to use
date.start <- "1/2/2007"
date.end <- "2/2/2007"
## Setup query for reducing data set
query <- paste0("Select * from housepw1 WHERE DayChr in ('Thurs','Fri') and Date in ('1/2/2007','2/2/2007')")
## Reduce number of rows to only those in our range.
housepw2 <- sqldf(query,stringsAsFactors=FALSE)
## Free up memory by deleting old unneeded objects
rm(housepw1)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw2[,1],' ',housepw2[,2])
datetime2 <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
housepw2$DateTime <- datetime2
## Define what to make a histogram of...
x <- housepw2$DateTime
y <- as.numeric(housepw2$Global_active_power)
par(mfrow=c(2,2))
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE))
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(x,y,type="l",ann=FALSE)
title(ylab="Global Active Power (kilowatts)")
})
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE))
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power (kilowatts)")
})
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=0,0,2,0))
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE))
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red"))
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue"))
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power (kilowatts)")
})
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power (kilowatts)")
})
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
})
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
})
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
})
View(housepw2)
plot(DateTime,as.numeric(Voltage),type="l")
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,as.numeric(Voltage),type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
})
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(Voltage)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
})
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot1.R', echo=TRUE)
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(housepw2$Voltage)
Global_reactive_power <- as.numeric(housepw2$Global_reactive_power)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
plot(DateTime,Global_reactive_power,type="l")
})
## plot3.R - starting over from scratch 2015-10-10
## by David DuPre
## Plot data from:  UC Irvine Machine Learning Repository, a repository for machine learning datasets.
##  Title: "Individual household electric power consumption Data Set"
##  using data from the dates 2007-02-01 and 2007-02-02.
## File format:
## The following descriptions of the 9 variables in the dataset are taken from the UCI web site:
##
## 1. Date: Date in format dd/mm/yyyy
## 2. Time: time in format hh:mm:ss
## (Both of above replaced by TimeStamp column in my result set.)
## 1. TimeStamp  (All other columns below are reduced by 1.)
## 3. Global_active_power: household global minute-averaged active power (in kilowatt)
## 4. Global_reactive_power: household global minute-averaged reactive power (in kilowatt)
## 5. Voltage: minute-averaged voltage (in volt)
## 6. Global_intensity: household global minute-averaged current intensity (in ampere)
## 7. Sub_metering_1: energy sub-metering No. 1 (in watt-hour of active energy). It corresponds to the kitchen, containing mainly a dishwasher, an oven and a microwave (hot plates are not electric but gas powered).
## 8. Sub_metering_2: energy sub-metering No. 2 (in watt-hour of active energy). It corresponds to the laundry room, containing a washing-machine, a tumble-drier, a refrigerator and a light.
## 9. Sub_metering_3: energy sub-metering No. 3 (in watt-hour of active energy). It corresponds to an electric water-heater and an air-conditioner.
rc <- setwd("C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1")
library(data.table)
library("sqldf")
library("utils")
## install.packages("lubridate")
library(lubridate)
path <- getwd()
histfilename <- paste0(path,"History","_",format(Sys.time(), "%Y-%m-%d_%H-%M-%S"),".R")
savehistory(histfilename)
zip.file <- "exdata-data-household_power_consumption.zip"
csv.file <- "household_power_consumption.txt"
png.file <- "plot4.png"
data.dir <- getwd()
fileurl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
## Check for CSV file if not found then download ZIP and unzip
if (!file.exists(file.path(data.dir, csv.file))) {
download.file(fileurl,
destfile = file.path(data.dir, zip.file),
method = "wininet",
mode="wb")
dateDownloaded <- date()
unzip(file.path(data.dir, zip.file), exdir=".")
}
cols1 = c("Date","chr","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
## read file into table
housepw <- read.table(file=csv.file,header=TRUE,sep=";",stringsAsFactors = FALSE,na.strings="NA" )
# Find the Good rows
good <- complete.cases(housepw)
## Remove incomplete rows
housepw1 <- housepw[good,]
## Free up memory by deleting old unneeded objects
rm(housepw)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw1$Date,' ',housepw1$Time)
datetime <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
## Set up the Day and DayChr columns in the table.
housepw1$Day <- wday(datetime,label=TRUE)
housepw1$DayChr <- as.character(wday(datetime,label=TRUE))
## set time range of data we want to use
date.start <- "1/2/2007"
date.end <- "2/2/2007"
## Setup query for reducing data set
query <- paste0("Select * from housepw1 WHERE DayChr in ('Thurs','Fri') and Date in ('1/2/2007','2/2/2007')")
## Reduce number of rows to only those in our range.
housepw2 <- sqldf(query,stringsAsFactors=FALSE)
## Free up memory by deleting old unneeded objects
rm(housepw1)
## build the TIMESTAMP data in STRING format
datetime <- paste(housepw2[,1],' ',housepw2[,2])
datetime2 <- strptime(datetime,"%d/%m/%Y %H:%M:%S")
housepw2$DateTime <- datetime2
## Define what to make a histogram of...
x <- housepw2$DateTime
y <- as.numeric(housepw2$Global_active_power)
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(housepw2$Voltage)
Global_reactive_power <- as.numeric(housepw2$Global_reactive_power)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
plot(DateTime,Global_reactive_power,type="l")
})
## Open PNG file for plotting
png(file=png.file)
## Setup for 2 by 2 graphs
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(housepw2$Voltage)
Global_reactive_power <- as.numeric(housepw2$Global_reactive_power)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
title(ylab="Energy sub metering")
plot(DateTime,Global_reactive_power,type="l")
})
## Close out the file
dev.off()
##End
png(file=png.file)
## Setup for 2 by 2 graphs
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(housepw2$Voltage)
Global_reactive_power <- as.numeric(housepw2$Global_reactive_power)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3")bty="n")
title(ylab="Energy sub metering")
plot(DateTime,Global_reactive_power,type="l")
})
## Close out the file
dev.off()
## Open PNG file for plotting
png(file=png.file)
## Setup for 2 by 2 graphs
par(mfrow=c(2,2),mar=c(4,4,2,1),oma=c(0,0,2,0))
Voltage <- as.numeric(housepw2$Voltage)
Global_reactive_power <- as.numeric(housepw2$Global_reactive_power)
## Create Line Chart to the screen, or in the PNG file if it is open.
with(housepw2, {
## Create Line Chart to the screen, or in the PNG file if it is open.
plot(DateTime,as.numeric(Global_active_power),type="l",ann=FALSE)
title(ylab="Global Active Power")
plot(DateTime,Voltage,type="l")
plot(DateTime,as.numeric(Sub_metering_1),type="l",ann=FALSE)
points(DateTime,as.numeric(Sub_metering_2),type="l",col="red")
points(DateTime,as.numeric(Sub_metering_3),type="l",col="blue")
legend("topright",pch=150,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),bty="n")
title(ylab="Energy sub metering")
plot(DateTime,Global_reactive_power,type="l")
})
## Close out the file
dev.off()
source('C:/downloads/Coursera/Exploratory_Data_Analysis/Exp_Data_Project1/ExData_Plotting1/plot4.R', echo=TRUE)
